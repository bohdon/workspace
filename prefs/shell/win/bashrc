#! /bin/bash
# Bohdon Sayre BASHRC
# designed for use with Git Bash
# https://github.com/bohdon/workspace

workspace_dir=$(readlink -f "$(dirname "${BASH_SOURCE[0]}")/../../..")

# add a directory to PATH, if not already there
add_path() {
    if [[ ":$PATH:" != *":$1"* ]]; then
        export PATH="${PATH}:$1"
    fi
}

# add bin folders to PATH
add_path "${workspace_dir}/bin"
add_path "${HOME}/bin"

alias rider="rider.cmd"
alias charm="pycharm.cmd"

# cd aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

# make rm, cp, and mv always verbose
alias rm="rm -v"
alias cp="cp -v"
alias mv="mv -v"

# git aliases
alias g='git'

# pre-commit aliases
alias pc='pre-commit'

# docker aliases
alias d='docker'
alias d-c='docker-compose'

# perforce aliases
alias r="p4 reconcile -m"
alias rk="p4 revert -k"

# Utilities
alias open='start' # Universal open command
alias ls="ls -AFGh --color=auto --show-control-chars"
alias ll="ls -l"
alias bigdirs='du -h ./ | grep -v "^-1" | grep "^[0-9]\\+G"'
alias grep='grep --color=tty -d skip'
alias egrep='egrep --color=tty -d skip'
alias notify="notify.sh"

# find files, and `ls -l` them
find_ls() {
    [[ $1 ]] && path="$1" || path="."
    find "$path" "${@:2}" -type f -exec "ls" -AFGhl --color=auto --show-control-chars {} +
}

ff() {
    find_ls "$@"
}

fx() {
    find_ls "$@" -perm -u=x
}

fw() {
    find_ls "$@" -perm -u=w
}

fr() {
    find_ls "$@" ! \( -perm -u=w \)
}

dejunk() {
    find . \( -name ".DS_Store*" -o -name "Thumbs.db" \) -exec "rm" '{}' ';'
}


# Set Project
# Source an env in workspace/.projects/ and cd to the SETPROJ_ROOT if set.
sp() {
    if [[ -z $1 ]]; then
        echo "Usage: setproj PROJECT"
        ls "${workspace_dir}/.projects" | sed -e 's/\..*$//'
        return
    fi

    env_file=${workspace_dir}/.projects/"${1}".env
    if [[ -f "$env_file" ]]; then
        set -a
        export SETPROJ_ROOT=
        source $env_file
        set +a
        echo "Set project '${env_file}'"
    else
        echo "Project not found: '${env_file}'"
    fi

    # update ConEmu tab name
    if command -v ConEmuC >/dev/null 2>&1; then
        ConEmuC -GuiMacro Rename 0 $1
    fi

    # cd to default root
    if [[ ! -z ${SETPROJ_ROOT} ]]; then
        cd "${SETPROJ_ROOT}" || return
    fi
}
